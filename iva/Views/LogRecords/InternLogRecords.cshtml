@{
    ViewData["Title"] = "InternLogRecords";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title>Performance Report</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <style>
        .dropdown-combo {
            position: relative;
        }

        .dropdown-menu {
            position: absolute;
            top: 100%;
            left: 0;
            z-index: 1000;
            display: none;
            width: 100%;
            max-height: 300px;
            overflow-y: auto;
            padding: 0.5rem 0;
            margin: 0.125rem 0 0;
            font-size: 0.9rem;
            color: #212529;
            background-color: #fff;
            border: 1px solid rgba(0, 0, 0, 0.15);
            border-radius: 0.25rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }

        .dropdown-item {
            display: block;
            width: 100%;
            padding: 0.5rem 1.5rem;
            clear: both;
            font-weight: 400;
            color: #212529;
            text-align: inherit;
            background-color: transparent;
            border: 0;
            cursor: pointer;
        }

            .dropdown-item:hover, .dropdown-item.active {
                background-color: #f8f9fa;
            }

            .dropdown-item strong {
                display: block;
                margin-bottom: 0.1rem;
            }

            .dropdown-item small {
                display: block;
                font-size: 0.8em;
                opacity: 0.8;
            }

        .dropdown-spinner {
            position: absolute;
            right: 45px;
            top: 50%;
            transform: translateY(-50%);
            z-index: 1001;
        }

        #internDisplay {
            border: 1px solid #dee2e6;
            transition: all 0.3s ease;
        }

        #clearSelection {
            transition: all 0.2s ease;
        }

            #clearSelection:hover {
                transform: scale(1.05);
            }

        .button-59 {
            align-items: center;
            background-color: #fff;
            border: 1px solid #000;
            border-radius: 5px;
            box-sizing: border-box;
            color: #000;
            cursor: pointer;
            display: inline-flex;
            fill: #000;
            font-family: Inter,sans-serif;
            font-size: 13px;
            font-weight: 600;
            height: 38px;
            justify-content: center;
            letter-spacing: -.8px;
            line-height: 24px;
            min-width: 120px;
            outline: 0;
            padding: 0 8px;
            text-align: center;
            text-decoration: none;
            transition: all .3s;
            user-select: none;
            -webkit-user-select: none;
            touch-action: manipulation;
        }

            .button-59:focus {
                color: #171e29;
            }

            .button-59:hover {
                border-color: #06f;
                color: #06f;
                fill: #06f;
            }

            .button-59:active {
                border-color: #06f;
                color: #06f;
                fill: #06f;
            }

        #LogTableResponsive {
            overflow-x: auto;
        }

        .table {
            width: 100%;
            margin-bottom: 1rem;
            color: #212529;
        }

        .table-bordered {
            border: 1px solid #dee2e6;
        }

        .table-striped tbody tr:nth-of-type(odd) {
            background-color: rgba(0, 0, 0, 0.05);
        }
    </style>
</head>
<body>

    <h4>Search Logs for a Specific Intern </h4>
    <div>
        <div class="mt-5">
            <div class="row">

                <div class="col-md-12 mx-auto">
                    <div class="card">

                        <div class="card-body">

                            <!-- Search Row -->
                            <div class="row">
                                <!-- RFID Search -->
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="rfidSearch">Search by RFID:</label>
                                        <div class="input-group dropdown-combo">
                                            <input type="text" id="rfidSearch" class="form-control" placeholder="Type RFID">
                                            <div class="input-group-append">
                                                <span class="input-group-text"><i class="fas fa-id-card"></i></span>
                                            </div>
                                            <div class="dropdown-menu" id="rfidDropdown"></div>
                                            <div class="dropdown-spinner" style="display: none;">
                                                <div class="spinner-border spinner-border-sm text-primary" role="status">
                                                    <span class="sr-only">Loading...</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Employee Code Search -->
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="codeSearch">Search by Intern Code:</label>
                                        <div class="input-group dropdown-combo">
                                            <input type="text" id="codeSearch" class="form-control" placeholder="Type Intern Code">
                                            <div class="input-group-append">
                                                <span class="input-group-text"><i class="fas fa-barcode"></i></span>
                                            </div>
                                            <div class="dropdown-menu" id="codeDropdown"></div>
                                            <div class="dropdown-spinner" style="display: none;">
                                                <div class="spinner-border spinner-border-sm text-primary" role="status">
                                                    <span class="sr-only">Loading...</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Employee Name Search -->
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label for="nameSearch">Search by Intern Name:</label>
                                        <div class="input-group dropdown-combo">
                                            <input type="text" id="nameSearch" class="form-control" placeholder="Type Intern Name">
                                            <div class="input-group-append">
                                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                            </div>
                                            <div class="dropdown-menu" id="nameDropdown"></div>
                                            <div class="dropdown-spinner" style="display: none;">
                                                <div class="spinner-border spinner-border-sm text-primary" role="status">
                                                    <span class="sr-only">Loading...</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Selected Employee Display -->
                            <div id="internDisplay" class="mt-4 p-3 bg-light rounded" style="display: none;">
                                <div class="d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0">Selected Intern</h5>
                                    <button id="clearSelection" class="btn btn-sm btn-outline-secondary">Clear</button>
                                </div>
                                <hr>
                                <div class="row">
                                    <div class="col-md-4">
                                        <p><strong>RFID:</strong> <span id="displayRfid"></span></p>
                                    </div>
                                    <div class="col-md-4">
                                        <p><strong>Intern Code:</strong> <span id="displayCode"></span></p>
                                    </div>
                                    <div class="col-md-4">
                                        <p><strong>Intern Name:</strong> <span id="displayName"></span></p>
                                    </div>
                                </div>
                            </div>


                            <!-- Navbar content -->
                            <div class="d-flex align-items-center mt-5">
                                <label for="startDate" class="me-2">Start Date:</label>
                                <input type="date" id="startDate" class="form-control me-3" style="width: 150px;">

                                <label for="endDate" class="me-2">End Date:</label>
                                <input type="date" id="endDate" class="form-control me-3" style="width: 150px;">

                                <button class="btn button-59" type="button" id="filterButton">Filter</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>




    <div id="loadingMessage" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: rgba(0, 0, 0, 0.8); color: ghostwhite; padding: 20px; border-radius: 10px; z-index: 9999;">
        please wait,loading the data...
    </div>



    <div class="d-flex align-items-center justify-content-end mt-3" id="downloadSection">
        <label for="downloadButton" class="me-2">Generate Excel Sheet:</label>
        <button class="btn button-59 display-flex flex-end" type="button" id="downloadButton">Download</button>
    </div>

    <div class="mt-3" id="LogTableResponsive"></div>

    <script>
        $(document).ready(function () {

            $("#downloadSection, #downloadSection *").hide();

             function showLoadingMessage() {
                $("#loadingMessage").fadeIn();
            }
            function hideLoadingMessage() {
                $("#loadingMessage").fadeOut();
            }

            $('#downloadButton').on('click', function () {
                var SelectedStartDate = $('#startDate').val();
                var SelectedEndDate = $('#endDate').val();
                var SelectedInternRfid = $('#rfidSearch').val();

                // Check if any required field is empty
                if (!SelectedStartDate || !SelectedEndDate || !SelectedInternRfid) {
                    Swal.fire("All fields are required!", "", "warning");
                    return; // Exit the function if validation fails
                }

                showLoadingMessage();
                fetchDownloadData(SelectedStartDate, SelectedEndDate, SelectedInternRfid);
            });

            function fetchDownloadData(SelectedStartDate, SelectedEndDate, SelectedInternRfid) {
                console.log("fetch data called");
                // Create the request data object matching your C# class structure
                var requestData = {
                    startDate: SelectedStartDate,
                    endDate: SelectedEndDate,
                    internRfid: SelectedInternRfid
                };

                $.ajax({
                    url: 'api/DownloadInternPeopleParticularLogRecordsExcel',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(requestData),
                    xhrFields: {
                        responseType: 'blob'
                    },
                    success: function (data, status, xhr) {
                        // Get filename from content-disposition header
                        let filename = "InternLogRecords.xlsx"; // Fallback name
                        const disposition = xhr.getResponseHeader('content-disposition');

                        if (disposition) {

                            const filenameMatch = disposition.match(/filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/);
                            if (filenameMatch && filenameMatch[1]) {
                                filename = filenameMatch[1]
                                    .replace(/['"]/g, '')
                                    .replace(/^UTF-8''/i, '')
                                    .replace(/^filename_=/, '');
                                filename = decodeURIComponent(filename);
                            }
                        }

                        // Create download link
                        const blob = new Blob([data]);
                        const link = document.createElement('a');
                        link.href = window.URL.createObjectURL(blob);
                        link.download = filename;
                        document.body.appendChild(link);
                        link.click();

                        // Clean up
                        setTimeout(function () {
                            document.body.removeChild(link);
                            window.URL.revokeObjectURL(link.href);
                        }, 100);

                        hideLoadingMessage();
                    },
                    error: function (xhr, status, error) {
                        console.error("Error:", error);
                        console.error("Status:", status);
                        console.error("Full response:", xhr.responseText);
                        alert('Error fetching data. Check console for details.');
                        hideLoadingMessage();
                    }
                });
            }

            $('#filterButton').on('click', function () {
                var SelectedStartDate = $('#startDate').val();
                var SelectedEndDate = $('#endDate').val();
                var SelectedInternRfid = $('#rfidSearch').val();

                if (!SelectedStartDate || !SelectedEndDate || !SelectedInternRfid) {
                    Swal.fire("All fields are required!", "", "warning");
                    hideLoadingMessage();
                    return;
                }
                else {
                    showLoadingMessage();
                    fetchData(SelectedStartDate, SelectedEndDate, SelectedInternRfid);
                }
            });

            function fetchData(SelectedStartDate, SelectedEndDate, SelectedInternRfid) {
            console.log("fetch data called");

            // Create the request data object matching your C# class structure
            var requestData = {
                startDate: SelectedStartDate,
                endDate: SelectedEndDate,
                internRfid: SelectedInternRfid
            };

            $.ajax({
                url: 'api/GetInternLogRecords',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(requestData),
                success: function (response) {
                    console.log("Received data:", response);
                    renderTable(response);
                    // Process your data here
                    hideLoadingMessage();
                   $("#downloadSection, #downloadSection *").show();

                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                    console.error("Status:", status);
                    console.error("Full response:", xhr.responseText);
                    alert('Error fetching data. Check console for details.');
                    hideLoadingMessage();

                }
            });
        }
            // Debounce function to limit API calls
            function debounce(func, wait) {
                let timeout;
                return function() {
                    const context = this, args = arguments;
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func.apply(context, args), wait);
                };
            }

            // Initialize all dropdowns
            initDropdown('rfid', 'rfid');
            initDropdown('code', 'code');
            initDropdown('name', 'name');

            function initDropdown(dropdownId, searchField) {
                const searchInput = $(`#${dropdownId}Search`);
                const dropdown = $(`#${dropdownId}Dropdown`);
                const spinner = $(`#${dropdownId}Search`).closest('.dropdown-combo').find('.dropdown-spinner');

                // Real-time search with debouncing
                searchInput.on('input', debounce(function() {
                    const searchTerm = $(this).val().trim();
                    dropdown.empty().hide();

                    if (searchTerm.length < 2) {
                        return;
                    }

                    spinner.show();

                    // Fetch from server
                    $.ajax({
                              url: `api/SearchInterns?field=${searchField}&term=${encodeURIComponent(searchTerm)}`,
                        type: 'GET',
                        success: function(interns) {
                            spinner.hide();

                            if (interns.length === 0) {
                                dropdown.append('<div class="dropdown-item text-muted">No matches found</div>');
                            } else {
                                interns.forEach(intern => {
                                    dropdown.append(`
                                        <div class="dropdown-item"
                                             data-rfid="${intern.rfid}"
                                             data-code="${intern.code}"
                                             data-name="${intern.name}">
                                            <strong>${intern[searchField]}</strong>
                                            ${searchField === 'rfid' ?
                                                `<small class="text-muted">${intern.name} (${intern.code})</small>` :
                                                ''}
                                            ${searchField === 'code' ?
                                                `<small class="text-muted">${intern.name}</small>` :
                                                ''}
                                            ${searchField === 'name' ?
                                                `<small class="text-muted">${intern.code}</small>` :
                                                ''}
                                        </div>
                                    `);
                                });
                            }
                            dropdown.show();
                        },
                        error: function(xhr) {
                            spinner.hide();
                            dropdown.append('<div class="dropdown-item text-danger">Error loading data</div>').show();
                            console.error('Error fetching interns:', xhr.responseText);
                        }
                    });
                }, 300));

                // Handle selection from this dropdown
                $(document).on('click', `#${dropdownId}Dropdown .dropdown-item`, function() {
                    if ($(this).hasClass('text-muted') || $(this).hasClass('text-danger')) return;

                    const rfid = $(this).data('rfid');
                    const code = $(this).data('code');
                    const name = $(this).data('name');

                    updateInternDisplay(rfid, code, name);
                });
            }

            // Update all fields when an employee is selected
            function updateInternDisplay(rfid, code, name) {
                $('#rfidSearch').val(rfid);
                $('#codeSearch').val(code);
                $('#nameSearch').val(name);

                // Hide all dropdowns
                $('.dropdown-menu').hide();

                // Display selected employee
                $('#displayRfid').text(rfid);
                $('#displayCode').text(code);
                $('#displayName').text(name);
                $('#internDisplay').show();
            }

            // Clear selection
            $('#clearSelection').click(function() {
                $('#rfidSearch, #codeSearch, #nameSearch').val('');
                $('#internDisplay').hide();
            });

            // Hide dropdowns when clicking elsewhere
            $(document).click(function(e) {
                if (!$(e.target).closest('.dropdown-combo').length) {
                    $('.dropdown-menu').hide();
                }
            });

            // Keyboard navigation (optional enhancement)
            $(document).on('keydown', '.form-control', function(e) {
                const dropdown = $(this).nextAll('.dropdown-menu').first();
                const items = dropdown.find('.dropdown-item:not(.text-muted):not(.text-danger)');

                if (e.key === 'ArrowDown' && dropdown.is(':visible')) {
                    e.preventDefault();
                    const active = dropdown.find('.active');
                    if (active.length) {
                        active.removeClass('active');
                        active.next().addClass('active');
                    } else {
                        items.first().addClass('active');
                    }
                } else if (e.key === 'ArrowUp' && dropdown.is(':visible')) {
                    e.preventDefault();
                    const active = dropdown.find('.active');
                    if (active.length) {
                        active.removeClass('active');
                        active.prev().addClass('active');
                    }
                } else if (e.key === 'Enter' && dropdown.is(':visible')) {
                    e.preventDefault();
                    dropdown.find('.active').click();
                }
            });




     function renderTable(data) {
            var $table = $("<table class='table table-bordered table-striped'>");
            $table.append("<thead><tr><th>Date</th><th>Day</th><th>Day of Week</th><th>Intern</th><th>Logs</th></tr></thead>");
            var $tbody = $("<tbody>");

            $.each(data, function(i, dayData) {
                var formattedDate = dayData.date.split('T')[0];
                    var serialNumber = (i + 1) + ".";

                // var logsHtml = "<div style='max-height: 200px; overflow-y: auto;'>";

                    var logsHtml = `
                    <div style="
                        max-width: 500px; /* Adjust based on your needs */
                        overflow-x: auto;
                        white-space: nowrap;
                        padding: 5px;
                        background: #f8f9fa;
                        border-radius: 4px;
                    ">

                `;
                           if (dayData.records && dayData.records.length > 0) {
            $.each(dayData.records, function(j, record) {

                    const timePart = record.logs.split('T')[1];
                    const [hours24, minutes, seconds] = timePart.split(':');

                    const hours12 = hours24 % 12 || 12;
                    const ampm = hours24 >= 12 ? 'PM' : 'AM';

                    const formattedHours = hours12.toString().padStart(2, '0');
                    const formattedMinutes = minutes.padStart(2, '0');

                    const formattedTime = `${formattedHours}:${formattedMinutes} ${ampm}`;

                    const logNumber = (j + 1).toString().padStart(2, '0');

                    // logsHtml += `<div>${logNumber}. ${formattedTime}    ${record.logType}</div>`;
        //                 logsHtml += `
        //   <div style="
        //     font-family: 'Courier New', monospace;
        //     padding: 8px 12px;
        //     margin: 4px 0;
        //     background: #f5f5f5;
        //     border-radius: 4px;
        //   ">
        //     <span style="font-weight: bold;">${logNumber}.</span>
        //     <span style="margin-right: 20px;">${formattedTime}</span>
        //     <span style="color: #2196F3;">${record.logType}</span>
        //   </div>
        // `;
                 logsHtml += `
                    <span style="
                        display: inline-block;
                        margin-right: 10px;
                        padding: 5px 10px;
                        background: #e9ecef;
                        border-radius: 3px;
                        font-family: monospace;
                    ">
                        <strong>${logNumber}.</strong>
                        ${formattedTime}
                        <span style="color: #2196F3;">${record.logType}</span>
                    </span>
                `;

            });
        } else {
            logsHtml += "No records";
        }
                logsHtml += "</div>";

                var $row = $("<tr>").append(
                    $("<td>").text(serialNumber),
                    $("<td>").text(formattedDate),
                    $("<td>").text(dayData.day),
                    $("<td>").text(dayData.dayOfWeek),
                    $("<td>").text(dayData.internName),
                    $("<td>").html(logsHtml),
                );

                $tbody.append($row);
            });

            $table.append($tbody);
            $("#LogTableResponsive").html($table);
        }


        });
    </script>
</body>
</html>